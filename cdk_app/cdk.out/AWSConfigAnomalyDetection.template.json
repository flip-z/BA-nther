{
 "Resources": {
  "AnomalyModelBucketB523284C": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": {
     "Fn::Join": [
      "",
      [
       "aws-config-anomaly-models-",
       {
        "Ref": "AWS::AccountId"
       },
       "-us-west-2"
      ]
     ]
    },
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/AnomalyModelBucket/Resource"
   }
  },
  "LambdaExecutionRoleD5C26073": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "s3:DeleteObject",
          "s3:GetObject",
          "s3:ListBucket",
          "s3:PutObject"
         ],
         "Effect": "Allow",
         "Resource": [
          {
           "Fn::GetAtt": [
            "AnomalyModelBucketB523284C",
            "Arn"
           ]
          },
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "AnomalyModelBucketB523284C",
               "Arn"
              ]
             },
             "/*"
            ]
           ]
          }
         ]
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "S3ModelAccess"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/LambdaExecutionRole/Resource"
   }
  },
  "TrainingFunctionLogGroup813396EB": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/aws/lambda/AWSConfigAnomalyDetection-TrainingFunction",
    "RetentionInDays": 7
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/TrainingFunctionLogGroup/Resource"
   }
  },
  "TrainingFunctionDF02EF51": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.us-west-2.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-us-west-2:6eba8a51b47f0d11e67443325d81b386ff0b7c059f823513cae0ba2dcb17f00e"
     }
    },
    "Environment": {
     "Variables": {
      "S3_BUCKET": {
       "Ref": "AnomalyModelBucketB523284C"
      },
      "PANTHER_API_URL": "https://api.papaya-oarfish.runpanther.net/public/graphql",
      "PANTHER_API_TOKEN": "pwHF3JgAac41xAd9Pf0UD1xFr8P52QLj1zIFXicE"
     }
    },
    "LoggingConfig": {
     "LogGroup": {
      "Ref": "TrainingFunctionLogGroup813396EB"
     }
    },
    "MemorySize": 3008,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "LambdaExecutionRoleD5C26073",
      "Arn"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "LambdaExecutionRoleD5C26073"
   ],
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/TrainingFunction/Resource",
    "aws:asset:path": "asset.6eba8a51b47f0d11e67443325d81b386ff0b7c059f823513cae0ba2dcb17f00e",
    "aws:asset:dockerfile-path": "Dockerfile.training",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "DetectionFunctionLogGroup8BFD62F7": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/aws/lambda/AWSConfigAnomalyDetection-DetectionFunction",
    "RetentionInDays": 7
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/DetectionFunctionLogGroup/Resource"
   }
  },
  "DetectionFunction0D928D27": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.us-west-2.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-us-west-2:aa9511ddd3b23cfc107883f1a3df1907e08d1f4ddec82cd8fef5f990ad8c5090"
     }
    },
    "Environment": {
     "Variables": {
      "S3_BUCKET": {
       "Ref": "AnomalyModelBucketB523284C"
      }
     }
    },
    "LoggingConfig": {
     "LogGroup": {
      "Ref": "DetectionFunctionLogGroup8BFD62F7"
     }
    },
    "MemorySize": 1024,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "LambdaExecutionRoleD5C26073",
      "Arn"
     ]
    },
    "Timeout": 30
   },
   "DependsOn": [
    "LambdaExecutionRoleD5C26073"
   ],
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/DetectionFunction/Resource",
    "aws:asset:path": "asset.aa9511ddd3b23cfc107883f1a3df1907e08d1f4ddec82cd8fef5f990ad8c5090",
    "aws:asset:dockerfile-path": "Dockerfile.detection",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "AnomalyDetectionAPI938979F8": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "Real-time anomaly detection for AWS Config events",
    "Name": "AWS Config Anomaly Detection"
   },
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/AnomalyDetectionAPI/Resource"
   }
  },
  "AnomalyDetectionAPICloudWatchRole0744094F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/AnomalyDetectionAPI/CloudWatchRole/Resource"
   }
  },
  "AnomalyDetectionAPIAccount6461C592": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "AnomalyDetectionAPICloudWatchRole0744094F",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "AnomalyDetectionAPI938979F8"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/AnomalyDetectionAPI/Account"
   }
  },
  "AnomalyDetectionAPIDeploymentD21CB9D0640b6755825dbbb1c982bbb0a6acfdfe": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Real-time anomaly detection for AWS Config events",
    "RestApiId": {
     "Ref": "AnomalyDetectionAPI938979F8"
    }
   },
   "DependsOn": [
    "AnomalyDetectionAPIdetectOPTIONS91174193",
    "AnomalyDetectionAPIdetectPOST8FD21A59",
    "AnomalyDetectionAPIdetect9DD6497C",
    "AnomalyDetectionAPIhealthGETAFEC16F2",
    "AnomalyDetectionAPIhealthOPTIONS8C97F843",
    "AnomalyDetectionAPIhealth015371E8",
    "AnomalyDetectionAPIOPTIONS6380EA1A"
   ],
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/AnomalyDetectionAPI/Deployment/Resource",
    "aws:cdk:do-not-refactor": true
   }
  },
  "AnomalyDetectionAPIDeploymentStageprodD80B69C8": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "AnomalyDetectionAPIDeploymentD21CB9D0640b6755825dbbb1c982bbb0a6acfdfe"
    },
    "RestApiId": {
     "Ref": "AnomalyDetectionAPI938979F8"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "AnomalyDetectionAPIAccount6461C592"
   ],
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/AnomalyDetectionAPI/DeploymentStage.prod/Resource"
   }
  },
  "AnomalyDetectionAPIOPTIONS6380EA1A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "AnomalyDetectionAPI938979F8",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "AnomalyDetectionAPI938979F8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/AnomalyDetectionAPI/Default/OPTIONS/Resource"
   }
  },
  "AnomalyDetectionAPIhealth015371E8": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "AnomalyDetectionAPI938979F8",
      "RootResourceId"
     ]
    },
    "PathPart": "health",
    "RestApiId": {
     "Ref": "AnomalyDetectionAPI938979F8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/AnomalyDetectionAPI/Default/health/Resource"
   }
  },
  "AnomalyDetectionAPIhealthOPTIONS8C97F843": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AnomalyDetectionAPIhealth015371E8"
    },
    "RestApiId": {
     "Ref": "AnomalyDetectionAPI938979F8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/AnomalyDetectionAPI/Default/health/OPTIONS/Resource"
   }
  },
  "AnomalyDetectionAPIhealthGETApiPermissionAWSConfigAnomalyDetectionAnomalyDetectionAPI669C031BGEThealth29AA520F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DetectionFunction0D928D27",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AnomalyDetectionAPI938979F8"
       },
       "/",
       {
        "Ref": "AnomalyDetectionAPIDeploymentStageprodD80B69C8"
       },
       "/GET/health"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/AnomalyDetectionAPI/Default/health/GET/ApiPermission.AWSConfigAnomalyDetectionAnomalyDetectionAPI669C031B.GET..health"
   }
  },
  "AnomalyDetectionAPIhealthGETApiPermissionTestAWSConfigAnomalyDetectionAnomalyDetectionAPI669C031BGEThealthCB7F57EC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DetectionFunction0D928D27",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AnomalyDetectionAPI938979F8"
       },
       "/test-invoke-stage/GET/health"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/AnomalyDetectionAPI/Default/health/GET/ApiPermission.Test.AWSConfigAnomalyDetectionAnomalyDetectionAPI669C031B.GET..health"
   }
  },
  "AnomalyDetectionAPIhealthGETAFEC16F2": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Origin": "'*'"
       },
       "StatusCode": "200"
      }
     ],
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DetectionFunction0D928D27",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Origin": true
      },
      "StatusCode": "200"
     }
    ],
    "ResourceId": {
     "Ref": "AnomalyDetectionAPIhealth015371E8"
    },
    "RestApiId": {
     "Ref": "AnomalyDetectionAPI938979F8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/AnomalyDetectionAPI/Default/health/GET/Resource"
   }
  },
  "AnomalyDetectionAPIdetect9DD6497C": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "AnomalyDetectionAPI938979F8",
      "RootResourceId"
     ]
    },
    "PathPart": "detect",
    "RestApiId": {
     "Ref": "AnomalyDetectionAPI938979F8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/AnomalyDetectionAPI/Default/detect/Resource"
   }
  },
  "AnomalyDetectionAPIdetectOPTIONS91174193": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AnomalyDetectionAPIdetect9DD6497C"
    },
    "RestApiId": {
     "Ref": "AnomalyDetectionAPI938979F8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/AnomalyDetectionAPI/Default/detect/OPTIONS/Resource"
   }
  },
  "AnomalyDetectionAPIdetectPOSTApiPermissionAWSConfigAnomalyDetectionAnomalyDetectionAPI669C031BPOSTdetect95816BE4": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DetectionFunction0D928D27",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AnomalyDetectionAPI938979F8"
       },
       "/",
       {
        "Ref": "AnomalyDetectionAPIDeploymentStageprodD80B69C8"
       },
       "/POST/detect"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/AnomalyDetectionAPI/Default/detect/POST/ApiPermission.AWSConfigAnomalyDetectionAnomalyDetectionAPI669C031B.POST..detect"
   }
  },
  "AnomalyDetectionAPIdetectPOSTApiPermissionTestAWSConfigAnomalyDetectionAnomalyDetectionAPI669C031BPOSTdetect1435E772": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DetectionFunction0D928D27",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AnomalyDetectionAPI938979F8"
       },
       "/test-invoke-stage/POST/detect"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/AnomalyDetectionAPI/Default/detect/POST/ApiPermission.Test.AWSConfigAnomalyDetectionAnomalyDetectionAPI669C031B.POST..detect"
   }
  },
  "AnomalyDetectionAPIdetectPOST8FD21A59": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DetectionFunction0D928D27",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AnomalyDetectionAPIdetect9DD6497C"
    },
    "RestApiId": {
     "Ref": "AnomalyDetectionAPI938979F8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/AnomalyDetectionAPI/Default/detect/POST/Resource"
   }
  },
  "TrainingScheduleRule04F6D2A0": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": "Trigger model training on schedule",
    "ScheduleExpression": "cron(0 6 * * ? *)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "TrainingFunctionDF02EF51",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/TrainingScheduleRule/Resource"
   }
  },
  "TrainingScheduleRuleAllowEventRuleAWSConfigAnomalyDetectionTrainingFunctionE68785DD07F21914": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TrainingFunctionDF02EF51",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "TrainingScheduleRule04F6D2A0",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/TrainingScheduleRule/AllowEventRuleAWSConfigAnomalyDetectionTrainingFunctionE68785DD"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/01Q22rDMAz9lr47Xi8Pe05XNgYbK9kHFNfVUi+xZXxZCSb/PtlJacCgIx3p+Ehbvl0/8/VK3HwlL13VqzNP30HIjlHplPyOp32UHQT28mMmNDIlNE8N9pCLOY6sx9bz9IHtm8Noc/2OiRP6fBE8HZDG3bsWLbxGI4NCkxuX+AhOK+8pGxlIdxLeQ/B8MVnnSuZ4Axa9CuiGvfDAhFWtCHATA3kDH2qrir0HrKXEaAI7gO1x0GDKUouMFm/LThOgUYxOQpH/hHDFSyZndGfnTwom038kRJdo4nwdiuP4aC72s7wybea/YrCRTnocSNQ87fhmQ2/165WqHJlVGngzxX/nCOT2rAEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "AWSConfigAnomalyDetection/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "AnomalyDetectionAPIEndpoint7149E042": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "AnomalyDetectionAPI938979F8"
      },
      ".execute-api.us-west-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "AnomalyDetectionAPIDeploymentStageprodD80B69C8"
      },
      "/"
     ]
    ]
   }
  },
  "DetectionEndpoint": {
   "Description": "REST API endpoint for anomaly detection",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "AnomalyDetectionAPI938979F8"
      },
      ".execute-api.us-west-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "AnomalyDetectionAPIDeploymentStageprodD80B69C8"
      },
      "/detect"
     ]
    ]
   }
  },
  "HealthCheckEndpoint": {
   "Description": "Health check endpoint",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "AnomalyDetectionAPI938979F8"
      },
      ".execute-api.us-west-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "AnomalyDetectionAPIDeploymentStageprodD80B69C8"
      },
      "/health"
     ]
    ]
   }
  },
  "AnomalyModelBucketName": {
   "Description": "S3 bucket for model storage",
   "Value": {
    "Ref": "AnomalyModelBucketB523284C"
   }
  },
  "TrainingFunctionName": {
   "Description": "Training function name for manual invocation",
   "Value": {
    "Ref": "TrainingFunctionDF02EF51"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}